variables:
  REPOSITORY_OF_PIPELINE_IMAGES: darkwind8/temp
  CI_BUILDER_IMAGE: interview-rentalready-ci-v2
  APP_IMAGE_TAG:  interview-rentalready-app-v1
  DOCKER_HOST: tcp://dind-service:2375
stages:
  - build_ci_image
  - build_app_image
  - test

build_ci_image:
  image: docker:20.10.12-alpine3.15
  stage: build_ci_image
  script:
      - docker ps
      - mkdir ~/.docker; echo "$dockerconfig_darkwind8" > ~/.docker/config.json
      - docker build --tag $REPOSITORY_OF_PIPELINE_IMAGES:$CI_BUILDER_IMAGE ci
      - docker push $REPOSITORY_OF_PIPELINE_IMAGES:$CI_BUILDER_IMAGE

build_app_image:
  image: $REPOSITORY_OF_PIPELINE_IMAGES:$CI_BUILDER_IMAGE
  stage: build_app_image
  script:
      - docker ps
      - mkdir ~/.docker; echo "$dockerconfig_darkwind8" > ~/.docker/config.json
      - docker build --tag $REPOSITORY_OF_PIPELINE_IMAGES:$APP_IMAGE_TAG .
      - docker push $REPOSITORY_OF_PIPELINE_IMAGES:$APP_IMAGE_TAG

linting:
  image: $REPOSITORY_OF_PIPELINE_IMAGES:$CI_BUILDER_IMAGE
  stage: test
  script:
      - mkdir ~/.docker; echo "$dockerconfig_darkwind8" > ~/.docker/config.json
      - docker run $REPOSITORY_OF_PIPELINE_IMAGES:$APP_IMAGE_TAG python3.10 makefile.py --action=lint

unit:
  image: $REPOSITORY_OF_PIPELINE_IMAGES:$CI_BUILDER_IMAGE
  stage: test
  services:
    - name: postgres:13
      alias: postgres
      variables:
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
  variables:
    DB_HOST: "postgre"
  script:
      - mkdir ~/.docker; echo "$dockerconfig_darkwind8" > ~/.docker/config.json
      - docker-compose -f docker-compose.test.yml run --rm test; docker-compose down